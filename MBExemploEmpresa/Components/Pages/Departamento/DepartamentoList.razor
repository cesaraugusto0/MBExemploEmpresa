@page "/departamentos"
@using MBExemploEmpresa.Entidades
@using MBExemploEmpresa.Servico
@inject DepartamentoService departamentoServico
@inject IDialogService DialogService
@inject ISnackbar SnackBar

<PageTitle>Departamentos</PageTitle>
<MudCard>
	<MudCardContent>
		<MudText Typo="Typo.h6" Class="mb-4">Departamentos Cadastrados</MudText>
		<MudPaper Class="d-flex justify-end flex-grow-1 mb-6" Elevation="0">
			<MudButton Color="Color.Primary"
				Variant="Variant.Filled"
				StartIcon="@Icons.Material.Filled.Add">
				Adicionar Novo Departamento
			</MudButton>
		</MudPaper>
		@if(_loading){
			<MudProgressCircular Color="Color.Primary" Indeterminate="true" Class="my-7" />
		} else {
			<MudDataGrid Items="@_departamentos"
					SortMode="SortMode.Multiple"
					Hover="true" >
				<Columns>

				</Columns>
			</MudDataGrid>
		}
	</MudCardContent>
</MudCard>

@code {

	private List<Departamento> _departamentos = new();
	private bool _dialogOpen;
	private bool _loading;
	private readonly DialogOptions _dialogOptions = new()
	{
		CloseButton = true,
		MaxWidth = MaxWidth.Medium,
		CloseOnEscapeKey = true
	};

	protected override Task OnInitializedAsync()
	{
		return CarregarAsync();
	}

	private async Task CarregarAsync() {
		try {
			_loading = true;
			StateHasChanged();
			_departamentos = await departamentoServico.ObterTodosAsync();
		} catch(Exception e) {
			SnackBar.Add($"Erro ao carregar departamentos: {e.Message}", Severity.Error);
		}
	}

}
